//
//
//
//

#include <string>
#include <cassert>

#include "Gui.h"

//---------------------------------------------------------------------------------------------------------------------
// Static initialization
Gui* Gui::mInstance = nullptr;

//---------------------------------------------------------------------------------------------------------------------
void Gui::init(std::string _name) {
	assert(mInstance == nullptr);
	mInstance = new Gui(_name);
}

//---------------------------------------------------------------------------------------------------------------------
void Gui::end() {
	assert(mInstance != nullptr);
	delete mInstance;
}

//---------------------------------------------------------------------------------------------------------------------
Gui * Gui::get() {
	return mInstance;
}

//---------------------------------------------------------------------------------------------------------------------
// Public interface
//---------------------------------------------------------------------------------------------------------------------

void Gui::drawMap(const pcl::PointCloud<pcl::PointXYZ>::Ptr & _map) {
}

//---------------------------------------------------------------------------------------------------------------------
void Gui::clearMap() {
}

//---------------------------------------------------------------------------------------------------------------------
void Gui::addPointToPcViewer(const pcl::PointCloud<pcl::PointXYZ>::Ptr & _cloud, unsigned _pointSize, unsigned _r, unsigned _g, unsigned _b) {
}

//---------------------------------------------------------------------------------------------------------------------
void Gui::clearPcViewer() {
}

//---------------------------------------------------------------------------------------------------------------------
void Gui::updateStereoImages(const cv::Mat & _left, const cv::Mat & _right) {
}

//---------------------------------------------------------------------------------------------------------------------
void Gui::drawPoints(const std::vector<cv::Point2i>& _points, bool _isLeft, unsigned _r, unsigned _g, unsigned _b) {
}

//---------------------------------------------------------------------------------------------------------------------
void Gui::drawBoundBoxes(const std::vector<cv::Rect>& _boxes, bool _isLeft, unsigned _r, unsigned _g, unsigned _b) {
}


//---------------------------------------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------------------------------------
// Private methods
//---------------------------------------------------------------------------------------------------------------------

Gui::Gui(std::string _name) {
	mName = _name;
}
//---------------------------------------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------------------------------------